local autofish = false
local perfectCast = true
local catchCount = 0
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local net = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")

local equipRemote   = net:WaitForChild("RE/EquipToolFromHotbar")
local rodRemote     = net:WaitForChild("RF/ChargeFishingRod")
local miniGameRemote= net:WaitForChild("RF/RequestFishingMinigameStarted")
local finishRemote  = net:WaitForChild("RE/FishingCompleted")
local baitRemote    = net:WaitForChild("RE/BaitSpawned")
local fishRemote    = net:WaitForChild("RE/FishCaught")

-- =========================================================
-- GUI SETUP
-- =========================================================
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AutoFishUI"
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 360, 0, 240)  
mainFrame.Position = UDim2.new(0.5, -180, 0, 100) 
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local uiStroke = Instance.new("UIStroke", mainFrame)
uiStroke.Thickness = 3
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local gradient = Instance.new("UIGradient", uiStroke)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(170, 0, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 0, 180))
}
gradient.Rotation = 45

Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)


-- =========================================================
-- HEADER
-- =========================================================
local header = Instance.new("Frame", mainFrame)
header.Size = UDim2.new(1, -10, 0, 30)
header.Position = UDim2.new(0, 5, 0, 5)
header.BackgroundTransparency = 1

local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(1, -90, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0) 
title.Text = "T-Walker 3.0"
title.TextColor3 = Color3.fromRGB(200, 200, 255)
title.TextXAlignment = Enum.TextXAlignment.Left 
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 16

local minimizeBtn = Instance.new("TextButton", header)
minimizeBtn.Size = UDim2.new(0, 24, 0, 24)
minimizeBtn.Position = UDim2.new(1, -55, 0, 3)
minimizeBtn.Text = "–"
minimizeBtn.TextScaled = true
minimizeBtn.BackgroundColor3 = Color3.fromRGB(50, 0, 100)
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(1, 0)

local closeBtn = Instance.new("TextButton", header)
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -28, 0, 3)
closeBtn.Text = "X"
closeBtn.TextScaled = true
closeBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 100)
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1, 0)

-- =========================================================
-- TAB SYSTEM
-- =========================================================
local tabBar = Instance.new("Frame", mainFrame)
tabBar.Size = UDim2.new(0, 100, 1, -50)
tabBar.Position = UDim2.new(0, 5, 0, 35)
tabBar.BackgroundTransparency = 1
tabBar.Visible = true 

local tabs, contents = {}, {}

local function createTab(name, emoji, order)
    local btn = Instance.new("TextButton", tabBar)
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, (order - 1) * 35)
    btn.Text = emoji .. " " .. name
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(40, 0, 80)
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

    local frame = Instance.new("ScrollingFrame", mainFrame)
    frame.Size = UDim2.new(1, -120, 1, -40)
    frame.Position = UDim2.new(0, 110, 0, 35)
    frame.BackgroundTransparency = 1
    frame.Visible = false
    frame.BorderSizePixel = 0
    frame.ScrollBarThickness = 6
    frame.AutomaticCanvasSize = Enum.AutomaticSize.Y

    tabs[name] = btn
    contents[name] = frame
end

createTab("AutoFish", "", 1)
createTab("Teleport", "", 2)
createTab("Settings", "", 3)
createTab("Misc", "", 4)
createTab("Trade", "", 5)
createTab("Webhook", "", 6)

local function switchTab(name)
    for n, f in pairs(contents) do
        f.Visible = (n == name)
        if tabs[n] then
            tabs[n].BackgroundColor3 = f.Visible and Color3.fromRGB(80, 0, 150) or Color3.fromRGB(40, 0, 80)
        end
    end
end

switchTab("AutoFish")

for name, btn in pairs(tabs) do
    btn.MouseButton1Click:Connect(function()
        switchTab(name)
    end)
end

tabBar:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateLines)
tabBar:GetPropertyChangedSignal("Position"):Connect(updateLines)

-- =========================================================
-- MINIMIZE & CLOSE 
-- =========================================================
local minimized = false
local restoreButton = Instance.new("TextButton", mainFrame)
restoreButton.Size = UDim2.new(1, 0, 1, 0)
restoreButton.Position = UDim2.new(0, 0, 0, 0)
restoreButton.BackgroundTransparency = 1
restoreButton.Text = ""
restoreButton.Visible = false

minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized

    if minimized then
        tabBar.Visible = false
        for _, f in pairs(contents) do
            f.Visible = false
        end

        mainFrame.Size = UDim2.new(0, 200, 0, 40)
        mainFrame.Position = UDim2.new(0.5, -100, 0, 10)

        minimizeBtn.Visible = false
        closeBtn.Visible = false

        title.AnchorPoint = Vector2.new(0.5, 0.5)
        title.Position = UDim2.new(0.5, 0, 0.5, 0)
        title.Size = UDim2.new(1, -40, 1, 0)
        title.TextXAlignment = Enum.TextXAlignment.Center

        restoreButton.Visible = true
    else
        tabBar.Visible = true
        minimizeBtn.Visible = true
        closeBtn.Visible = true
        restoreButton.Visible = false

        mainFrame.Size = UDim2.new(0, 360, 0, 240)
        mainFrame.Position = UDim2.new(0.5, -180, 0, 100)
        switchTab("AutoFish")

        title.AnchorPoint = Vector2.new(0, 0)
        title.Position = UDim2.new(0, 10, 0, 0)
        title.Size = UDim2.new(1, -90, 1, 0)
        title.Text = "T-Walker 3.0"
        title.TextColor3 = Color3.fromRGB(200, 200, 255)
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.BackgroundTransparency = 1
        title.Font = Enum.Font.GothamBold
        title.TextSize = 16
    end
end)

restoreButton.MouseButton1Click:Connect(function()
    if minimized then
        minimized = false

        tabBar.Visible = true
        minimizeBtn.Visible = true
        closeBtn.Visible = true
        restoreButton.Visible = false

        mainFrame.Size = UDim2.new(0, 360, 0, 240)
        mainFrame.Position = UDim2.new(0.5, -180, 0, 100)
        switchTab("AutoFish")

        title.AnchorPoint = Vector2.new(0, 0)
        title.Position = UDim2.new(0, 10, 0, 0)
        title.Size = UDim2.new(1, -90, 1, 0)
        title.Text = "T-Walker 3.0"
        title.TextColor3 = Color3.fromRGB(200, 200, 255)
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.BackgroundTransparency = 1
        title.Font = Enum.Font.GothamBold
        title.TextSize = 16
    end
end)

closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
    autofish = false
end)

-- =========================================================
-- AUTO FISH LOGIC
-- =========================================================

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)

local function stopAll()
    for _, t in pairs(animator:GetPlayingAnimationTracks()) do
        t:Stop()
    end
end
local function playAnimation(animId)
    stopAll()
    local animation = Instance.new("Animation")
    animation.AnimationId = animId
    local track = animator:LoadAnimation(animation)
    track:Play()
    return track
end


local function sellAllFish(statusLabel)
    local net = game:GetService("ReplicatedStorage"):WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_net@0.2.0")
        :WaitForChild("net")
    local sellRemote = net:WaitForChild("RF/SellAllItems")

    statusLabel.Text = "Status: 💰 Selling..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 220, 100)

    pcall(function()
        sellRemote:InvokeServer()
    end)

    task.wait(1) 
    statusLabel.Text = "Status: ✔ Running"
    statusLabel.TextColor3 = Color3.fromRGB(120, 255, 120)
end


local priority = {258,169,168,126,5,80,1}
local Players = game:GetService("Players") 
local ReplStorage = game:GetService("ReplicatedStorage") 
local player = Players.LocalPlayer
local Replion = require(ReplStorage.Packages.Replion) 
local ClientData = Replion.Client:WaitReplion("Data")

local remote = ReplStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RE/EquipItem")


local function getCoin()
    local data = ClientData:Get()
    return data.Coins or 0
end

local function getFishingRods()
    local timeout = tick() + 5 
    local rods = {}
    
    while tick() < timeout do
        local items = ClientData.Data.Items or ClientData.Data.Inventory or {}
        rods = items["Fishing Rods"] or {}
        
        if next(rods) ~= nil then
            break 
        end
        task.wait(0.5) 
    end
    
    return rods
end

local function getBestRodUUID()
    task.wait(0.5)
    local rods = getFishingRods() 
    for _, rodId in ipairs(priority) do
        for _, rod in pairs(rods) do
            if rod.Id == rodId then
                return rod.UUID
            end
        end
    end
    return nil
end

local function EquipBestFishingRod()
    local uuid = getBestRodUUID() 
    if uuid then
        local success, err = pcall(function()
            remote:FireServer(uuid, "Fishing Rods")
        end)
        if success then
            print("✅ Best rod equipped! UUID:", uuid)
        else
            warn("❌ Failed to equip rod:", err)
        end
    else
        warn("⚠️ No rod found in inventory according to priority!")
    end
end

local stopping = false

local function startFishing(statusLabel)
    if autofish then return end
    autofish = true
    stopping = false
    statusLabel.Text = "Status: ✔ Running"
    statusLabel.TextColor3 = Color3.fromRGB(120, 255, 120)

    task.spawn(function()
        EquipBestFishingRod()
        task.wait(3)

        equipRemote:FireServer(1)
        task.wait(1)

        while autofish do
            local timestamp = perfectCast and 9999999999 or (tick() + math.random())
            rodRemote:InvokeServer(timestamp)
            task.wait(0.1)
            local reelTrack = playAnimation("rbxassetid://134965425664034")
            miniGameRemote:InvokeServer(-1.238, 0.969)
            task.wait(0.3)

            local finished = false
            local baitConn = baitRemote.OnClientEvent:Connect(function() end)
            local fishConn = fishRemote.OnClientEvent:Connect(function()
                finished = true
                catchCount += 1
                statusLabel.Text = "Status: Catch " .. catchCount
                finishRemote:FireServer()
            end)

            local timeout = tick() + 5
            while not finished and autofish and tick() < timeout do
                finishRemote:FireServer()
                task.wait(0.1)
            end

            baitConn:Disconnect()
            fishConn:Disconnect()
            reelTrack:Stop()

            if not finished then
                warn("⚠️ Timeout, restart cycle")
            end

            if catchCount >= 1000 then
                sellAllFish(statusLabel)
                catchCount = 0
            end

            if stopping then
                autofish = false
                statusLabel.Text = "Status: ✖ Not Running"
                statusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
                break
            end

            task.wait(0.2)
        end
    end)
end

local function stopFishing(statusLabel)
    if autofish then
        stopping = true
        statusLabel.Text = "Status: ⏳ Stopping..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
    else
        statusLabel.Text = "Status: ✖ Not Running"
        statusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
    end
end


local rodPrices = {
    [80]  = 51000,     
    [5]   = 1100000,   
    [126] = 3100000,   
    [168] = 8100000,
}

local currentRod = nil

local function getRodUUIDFromInventory(rodId)
    local rodsInventory = getFishingRods()
    for _, rod in pairs(rodsInventory) do
        if rod.Id == rodId then
            return rod.UUID or rod.Id
        end
    end
    return nil
end

local function buyOrEquipRod(rodId)
    local purchaseRemote = net:WaitForChild("RF/PurchaseFishingRod")

    local rodUUID = getRodUUIDFromInventory(rodId)
    if rodUUID then
        if currentRod ~= rodId then
            remote:FireServer(rodUUID, "Fishing Rods")
            currentRod = rodId
            print("✅ Equipped rod ID " .. rodId)
        else
            print("ℹ️ Rod ID " .. rodId .. " sudah equipped")
        end
        return true
    end

    local success, err = pcall(function()
        purchaseRemote:InvokeServer(rodId)
    end)

    if not success then
        warn("⚠️ Failed to buy rod ID " .. rodId, err)
        return false
    end

    task.wait(1)

    rodUUID = getRodUUIDFromInventory(rodId)
    if rodUUID then
        remote:FireServer(rodUUID, "Fishing Rods")
        currentRod = rodId
        print("✅ Bought & Equipped rod ID " .. rodId)
        return true
    else
        warn("⚠️ Gagal beli rod ID " .. rodId)
        return false
    end
end

local function AutoBuyRodPriority(money)
    for _, rodId in ipairs(priority) do
        local rodUUID = getRodUUIDFromInventory(rodId)
        if rodUUID then
            buyOrEquipRod(rodId)
            return
        else
            local price = rodPrices[rodId]
            if price and money >= price then
                buyOrEquipRod(rodId)
                return
            end
        end
    end
end

-- =========================================================
-- GRINDING FUNCTION
-- =========================================================
function grinding(statusLabel)
    if autofish then
        stopping = true
        return
    end

    autofish = true
    stopping = false
    statusLabel.Text = "Status: ✔ Running"
    statusLabel.TextColor3 = Color3.fromRGB(120, 255, 120)

    task.spawn(function()
        EquipBestFishingRod()
        task.wait(1)
        equipRemote:FireServer(1)
        task.wait(1)
        while autofish do
            local timestamp = perfectCast and 9999999999 or (tick() + math.random())
            rodRemote:InvokeServer(timestamp)
            task.wait(0.1)
            local reelTrack = playAnimation("rbxassetid://134965425664034")
            miniGameRemote:InvokeServer(-1.238, 0.969)
            task.wait(0.3)

            local finished = false
            local baitConn = baitRemote.OnClientEvent:Connect(function() end)
            local fishConn = fishRemote.OnClientEvent:Connect(function()
                finished = true
                catchCount = catchCount + 1
                statusLabel.Text = "Status: Grinding " .. catchCount
                finishRemote:FireServer()
            end)

            local timeout = tick() + 5
            while not finished and autofish and tick() < timeout do
                finishRemote:FireServer()
                task.wait(0.1)
            end

            baitConn:Disconnect()
            fishConn:Disconnect()
            reelTrack:Stop()

            if not finished then
                warn("⚠️ Timeout, restart cycle")
            end


            if catchCount >= 50 then
                sellAllFish(statusLabel)
                catchCount = 0
            end

            local money = getCoin()
            AutoBuyRodPriority(money)

            if stopping then
                autofish = false
                statusLabel.Text = "Status: ✖ Stopped"
                statusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
                break
            end

            task.wait(0.2)
        end
    end)
end

-- =========================================================
-- AUTO FISH TAB UI
-- =========================================================
local autoTab = contents["AutoFish"]

local statusLabel = Instance.new("TextLabel", autoTab)
statusLabel.Size = UDim2.new(1, 0, 0, 25)
statusLabel.Position = UDim2.new(0, 0, 0, 10)
statusLabel.Text = "Status: X Not Running"
statusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14

local function createButton(text, posY, callback, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, posY)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(40, 0, 80)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    btn.MouseButton1Click:Connect(callback)
end

createButton("✔ Start Fishing", 40, function()
    startFishing(statusLabel)
end, autoTab)

createButton("X Stop Fishing", 80, function()
    stopFishing(statusLabel)
end, autoTab)

createButton("Auto Grinding ON/OFF", 120, function()
    if autofish then
        stopping = true
        statusLabel.Text = "Status: ⏳ Stopping..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
    else
        grinding(statusLabel)
    end
end, autoTab)

-- =========================================================
-- OTHER TABS TELEPORT
-- =========================================================
local tpTab = contents["Teleport"]
local tpLabel = Instance.new("TextLabel", tpTab)
tpLabel.Size = UDim2.new(1,0,0,25)
tpLabel.Position = UDim2.new(0,0,0,10)
tpLabel.Text = "Teleport to:"
tpLabel.TextColor3 = Color3.fromRGB(200,200,255)
tpLabel.BackgroundTransparency = 1
tpLabel.Font = Enum.Font.Gotham
tpLabel.TextSize = 14

local teleportCoral = {
    {pos = Vector3.new(-2947.46, 2.75, 2110.76), lookDir = Vector3.new(0.16, -0.00, -0.99)},
    {pos = Vector3.new(-2937.30, 2.75, 2111.35), lookDir = Vector3.new(0.00, 0.00, -1.00)},
    {pos = Vector3.new(-2974.28, 2.87, 2090.02), lookDir = Vector3.new(0.99, -0.00, -0.17)},
    {pos = Vector3.new(-2969.94, 4.00, 2043.68), lookDir = Vector3.new(0.74, 0.00, 0.67)},
    {pos = Vector3.new(-2928.52, 6.00, 2053.06), lookDir = Vector3.new(-0.52, -0.00, 0.85)},
}

local teleportSpots = {
    {pos = Vector3.new(987.6, 1.7, 5141.6), lookDir = Vector3.new(0, 0, -1)}, 
    {pos = Vector3.new(1015.5, 1.7, 5147.2), lookDir = Vector3.new(0, 0, -1)},
    {pos = Vector3.new(1008.6, 1.9, 5148.4), lookDir = Vector3.new(0, 0, -1)},
    {pos = Vector3.new(997.9, 1.5, 5146.9), lookDir = Vector3.new(0, 0, -1)}, 
    {pos = Vector3.new(1041.3, 2.0, 5142.0), lookDir = Vector3.new(-0.42, -0.00, -0.91)},
    {pos = Vector3.new(950.3, 2.6, 5116.6), lookDir = Vector3.new(0.73, 0.00, -0.69)},
    {pos = Vector3.new(1072.7, 3.5, 5097.7), lookDir = Vector3.new(-0.97, 0.00, -0.26)},
}

local teleportOcean = {
    {pos = Vector3.new(1754.5, 2.3, 3348.4), lookDir = Vector3.new(0.98, -0.00, -0.21)},
    {pos = Vector3.new(1757.6, 2.3, 3354.8), lookDir = Vector3.new(1.00, 0.00, -0.07)},
    {pos = Vector3.new(1760.4, 2.3, 3363.0), lookDir = Vector3.new(1.00, -0.00, 0.00)},
    {pos = Vector3.new(1771.3, 3.0, 3379.0), lookDir = Vector3.new(0.53, 0.00, -0.85)},
    {pos = Vector3.new(1795.2, 4.1, 3382.6), lookDir = Vector3.new(0.44, 0.00, -0.90)},
    {pos = Vector3.new(1825.4, 2.3, 3381.3), lookDir = Vector3.new(0.05, -0.00, -1.00)},
    {pos = Vector3.new(1857.4, 4.3, 3377.2), lookDir = Vector3.new(-0.59, -0.00, -0.80)},
}
local teleportSisyphus = {
    {pos = Vector3.new(-3713.5, -135.1, -1013.1), lookDir = Vector3.new(-0.22, -0.00, 0.98)},
    {pos = Vector3.new(-3740.1, -135.1, -1009.4), lookDir = Vector3.new(0.49, 0.00, 0.87)},
    {pos = Vector3.new(-3757.4, -135.1, -1000.0), lookDir = Vector3.new(0.48, -0.00, 0.88)},
    {pos = Vector3.new(-3674.4, -135.1, -995.5), lookDir = Vector3.new(-0.62, 0.00, 0.78)},
    {pos = Vector3.new(-3657.1, -134.1, -959.3), lookDir = Vector3.new(-0.98, -0.00, 0.20)},
    {pos = Vector3.new(-3691.2, -135.1, -892.4), lookDir = Vector3.new(-0.24, -0.00, -0.97)},
    {pos = Vector3.new(-3705.0, -135.1, -885.3), lookDir = Vector3.new(-0.35, -0.00, -0.93)},
}

local teleportFisherman = {
    {pos = Vector3.new(34.2, 1.9, 2759.7), lookDir = Vector3.new(-0.23, -0.00, -0.97)},
    {pos = Vector3.new(149.0, 2.6, 2785.0), lookDir = Vector3.new(0.76, 0.00, -0.65)},
    {pos = Vector3.new(197.1, 2.7, 2796.6), lookDir = Vector3.new(0.71, -0.00, -0.70)},
    {pos = Vector3.new(224.9, 2.2, 2831.8), lookDir = Vector3.new(0.97, 0.00, -0.26)},
    {pos = Vector3.new(241.9, 2.5, 2895.3), lookDir = Vector3.new(0.87, -0.00, -0.49)},
    {pos = Vector3.new(-120.3, 3.3, 2948.9), lookDir = Vector3.new(-0.83, 0.00, -0.55)},
    {pos = Vector3.new(-114.6, 3.3, 2929.4), lookDir = Vector3.new(-0.60, -0.00, -0.80)},
}

local teleportKohanaV = {
    {pos = Vector3.new(-629.3, 30.0, 99.0), lookDir = Vector3.new(0, 0, -1)},
    {pos = Vector3.new(-629.3, 30.0, 99.8), lookDir = Vector3.new(0, 0, -1)},
    {pos = Vector3.new(-629.3, 30.0, 99.6), lookDir = Vector3.new(0, 0, -1)},
    {pos = Vector3.new(-629.3, 30.0, 99.4), lookDir = Vector3.new(0, 0, -1)},
}

local teleportKohana = {
    {pos = Vector3.new(-844.8, 55.5, 355.9), lookDir = Vector3.new(-0.88, -0.00, 0.47)},
    {pos = Vector3.new(-921.6, 52.8, 357.3), lookDir = Vector3.new(0.85, 0.00, 0.52)},
    {pos = Vector3.new(-1027.6, 31.5, 418.3), lookDir = Vector3.new(1.00, 0.00, -0.02)},
    {pos = Vector3.new(-638.7, 16.0, 566.2), lookDir = Vector3.new(0.18, 0.00, -0.98)},
}

local teleportEsoteric = {
    {pos = Vector3.new(3165.5, -1226.5, 1320.4), lookDir = Vector3.new(0.37, -0.00, -0.93)},
    {pos = Vector3.new(3289.2, -1302.9, 1462.3), lookDir = Vector3.new(0.63, 0.00, 0.78)},
    {pos = Vector3.new(3176.4, -1302.9, 1470.4), lookDir = Vector3.new(-0.96, 0.00, 0.26)},
    {pos = Vector3.new(3030.0, -1301.0, 1421.9), lookDir = Vector3.new(0.05, -0.00, 1.00)},
}

local teleportTreasureroom = {
    {pos = Vector3.new(-3655.9, -268.5, -1630.1), lookDir = Vector3.new(0.95, 0.00, 0.32)},
    {pos = Vector3.new(-3598.0, -275.7, -1641.0), lookDir = Vector3.new(-0.66, 0.00, 0.75)},
    {pos = Vector3.new(-3550.9, -261.7, -1671.5), lookDir = Vector3.new(-0.99, 0.00, -0.16)},
    {pos = Vector3.new(-3648.0, -264.0, -1677.4), lookDir = Vector3.new(0.98, -0.00, 0.19)},
}

local teleportTropical = {
    {pos = Vector3.new(-2190.8, 25.4, 3594.3), lookDir = Vector3.new(-0.63, -0.00, -0.78)},
    {pos = Vector3.new(-2157.6, 25.4, 3828.3), lookDir = Vector3.new(-0.99, 0.00, -0.17)},
    {pos = Vector3.new(-2018.6, 25.4, 3865.3), lookDir = Vector3.new(0.21, -0.00, 0.98)},
    {pos = Vector3.new(-1957.6, 25.4, 3755.6), lookDir = Vector3.new(0.96, 0.00, -0.27)},
}

local teleportJungle = {
    {pos = Vector3.new(1480.2, 3.8, -335.3), lookDir = Vector3.new(0.74, 0.00, 0.67)},
    {pos = Vector3.new(1544.6, 3.1, -415.9), lookDir = Vector3.new(0.72, 0.00, -0.70)},
}

local teleportUnderGround = {
    {pos = Vector3.new(2159.0, -91.3, -727.2), lookDir = Vector3.new(-0.94, 0.00, 0.35)},
    {pos = Vector3.new(2140.7, -91.2, -698.7), lookDir = Vector3.new(-0.01, -0.00, -1.00)},
}

local teleportSecretTemple = {
    {pos = Vector3.new(1452.2, -22.1, -622.2), lookDir = Vector3.new(0.22, 0.00, 0.98)},
    {pos = Vector3.new(1506.3, -22.1, -628.1), lookDir = Vector3.new(0.15, 0.00, 0.99)},
    {pos = Vector3.new(1503.4, -22.1, -640.7), lookDir = Vector3.new(-0.12, -0.00, -0.99)},
    {pos = Vector3.new(1447.5, -22.1, -635.3), lookDir = Vector3.new(-0.19, -0.00, -0.98)},
}
local teleportMerchant = {
    {pos = Vector3.new(-131.0, 2.4, 2765.6), lookDir = Vector3.new(0.54, -0.00, -0.84)},
}


createButton("Ancient Jungle", 40, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportJungle[math.random(1, #teleportJungle)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Underground", 80, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportUnderGround[math.random(1, #teleportUnderGround)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Secret Temple", 120, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportSecretTemple[math.random(1, #teleportSecretTemple)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)
createButton("Ocean", 160, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportOcean[math.random(1, #teleportOcean)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Esoteric Depths", 200, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportEsoteric[math.random(1, #teleportEsoteric)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Sisyphus", 240, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportSisyphus[math.random(1, #teleportSisyphus)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Fisherman Island", 280, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportFisherman[math.random(1, #teleportFisherman)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Kohana", 320, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportKohana[math.random(1, #teleportKohana)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Treasure Room", 360, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportTreasureroom[math.random(1, #teleportTreasureroom)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)
createButton("Tropical Island", 400, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportTropical[math.random(1, #teleportTropical)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)
createButton("Coral Reefs", 440, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportCoral[math.random(1, #teleportCoral)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)
createButton("Crater Island", 480, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportSpots[math.random(1, #teleportSpots)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Kohana Volcano", 520, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportKohanaV[math.random(1, #teleportKohanaV)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)

createButton("Merchant Store", 560, function()
    local plr = game.Players.LocalPlayer
    local spot = teleportMerchant[math.random(1, #teleportMerchant)]
    plr.Character:SetPrimaryPartCFrame(CFrame.new(
        spot.pos,
        spot.pos + spot.lookDir
    ))
end, tpTab)



-- =========================================================
-- OTHER TABS SETTINGS
-- =========================================================
local setTab = contents["Settings"]

local function createButton(text, posY, callback, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, posY)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(40, 0, 80)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    btn.MouseButton1Click:Connect(callback)
    return btn
end

local autoWeather = false
local autoWeatherLabel = Instance.new("TextLabel", setTab)
autoWeatherLabel.Size = UDim2.new(1, 0, 0, 25)
autoWeatherLabel.Position = UDim2.new(0, 0, 0, 10)
autoWeatherLabel.Text = "Status: 🔴 Off"
autoWeatherLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
autoWeatherLabel.BackgroundTransparency = 1
autoWeatherLabel.Font = Enum.Font.Gotham
autoWeatherLabel.TextSize = 14

local function updateAutoWeatherLabel(tempText, duration)
    if tempText then
        autoWeatherLabel.Text = tempText
        if duration then
            task.delay(duration, function()
                autoWeatherLabel.Text = autoWeather and "Status: 🟢 On" or "Status: 🔴 Off"
            end)
        end
    else
        autoWeatherLabel.Text = autoWeather and "Status: 🟢 On" or "Status: 🔴 Off"
    end
end

createButton("Rejoin Server", 40, function()
    local ts = game:GetService("TeleportService")
    local lp = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, lp)
end, setTab)

createButton("Sell All Fish", 80, function()
    local net = game:GetService("ReplicatedStorage"):WaitForChild("Packages")
        :WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
    local sellRemote = net:WaitForChild("RF/SellAllItems")
    pcall(function()
        sellRemote:InvokeServer()
        updateAutoWeatherLabel("✅ Items Sold!", 2)
    end)
end, setTab)

createButton("Auto Weather", 120, function()
    autoWeather = not autoWeather
    updateAutoWeatherLabel()

    if autoWeather then
        task.spawn(function()
            local eventsFolder = game:GetService("ReplicatedStorage"):WaitForChild("Events")
            local weathers = {}
            for _, eventModule in ipairs(eventsFolder:GetChildren()) do
                if eventModule:IsA("ModuleScript") then
                    local success, eventData = pcall(require, eventModule)
                    if success and eventData and type(eventData) == "table" then
                        local weatherInfo = {
                            Name = eventData.Name or eventModule.Name,
                            Price = eventData.WeatherMachinePrice or 0,
                            Desc = eventData.Description or "No description",
                        }
                        table.insert(weathers, weatherInfo)
                    end
                end
            end

            local allowedWeathers = {["Radiant"]=true, ["Storm"]=true, ["Wind"]=true}
            local autoWeatherWeathers = {}
            for _, w in ipairs(weathers) do
                if allowedWeathers[w.Name] then
                    table.insert(autoWeatherWeathers, w)
                end
            end

            local net = game:GetService("ReplicatedStorage"):WaitForChild("Packages")
                :WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
            local weatherRemote = net:WaitForChild("RF/PurchaseWeatherEvent")

            local index = 1
            while autoWeather and #autoWeatherWeathers > 0 do
                local weatherName = autoWeatherWeathers[index].Name
                pcall(function()
                    weatherRemote:InvokeServer(weatherName)
                end)
                index = index + 1
                if index > #autoWeatherWeathers then index = 1 end
                task.wait(2)
            end
        end)
    end
end, setTab)

-- =========================
-- MISC TAB 
-- =========================
local MiscTab = contents["Misc"]

local miscLayout = Instance.new("UIListLayout", MiscTab)
miscLayout.SortOrder = Enum.SortOrder.LayoutOrder
miscLayout.Padding = UDim.new(0, 10)
miscLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

miscLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    MiscTab.CanvasSize = UDim2.new(0, 0, 0, miscLayout.AbsoluteContentSize.Y + 20)
end)

-- =========================================================
-- Rods Shop
-- =========================================================
local rods = {
    ["Luck Rod"]   = {id = 79,  price = "350 Coins"},
    ["Carbon Rod"] = {id = 76,  price = "900 Coins"},
    ["Grass Rod"]  = {id = 85,  price = "1.5k Coins"},
    ["Astral Rod"] = {id = 5,   price = "1M Coins"},
    ["Ares Rod"]   = {id = 126, price = "3M Coins"},
    ["Angler Rod"] = {id = 168, price = "8M Coins"},
    ["Midnight Rod"] = {id = 80, price = "50k Coins"},
}

local rodBtn = Instance.new("TextButton", MiscTab)
rodBtn.Size = UDim2.new(1, 0, 0, 30)
rodBtn.Text = "🎣 Select Rod"
rodBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
rodBtn.TextColor3 = Color3.fromRGB(255,255,255)
rodBtn.Font = Enum.Font.GothamBold
rodBtn.TextSize = 14
Instance.new("UICorner", rodBtn).CornerRadius = UDim.new(0,6)

local rodFrame = Instance.new("Frame", MiscTab)
rodFrame.Size = UDim2.new(1, -20, 0, 120)
rodFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
rodFrame.Visible = false
Instance.new("UICorner", rodFrame).CornerRadius = UDim.new(0,6)

local rodScroll = Instance.new("ScrollingFrame", rodFrame)
rodScroll.Size = UDim2.new(1, 0, 1, 0)
rodScroll.CanvasSize = UDim2.new(0,0,0,0)
rodScroll.ScrollBarThickness = 4
rodScroll.BackgroundTransparency = 1

local rodLayout = Instance.new("UIListLayout", rodScroll)
rodLayout.Padding = UDim.new(0,3)

local function refreshRodList()
    for _, c in ipairs(rodScroll:GetChildren()) do
        if c:IsA("TextButton") then c:Destroy() end
    end
    local count = 0
    for name, data in pairs(rods) do
        count += 1
        local btn = Instance.new("TextButton", rodScroll)
        btn.Size = UDim2.new(1, -5, 0, 25)
        btn.Text = name .. " (" .. data.price .. ")"
        btn.BackgroundColor3 = Color3.fromRGB(60,0,100)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 13
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)

        btn.MouseButton1Click:Connect(function()
            local rodRemote = net:WaitForChild("RF/PurchaseFishingRod")
            pcall(function() rodRemote:InvokeServer(data.id) end)
        end)
    end
    rodScroll.CanvasSize = UDim2.new(0,0,0,count*28)
end

rodBtn.MouseButton1Click:Connect(function()
    rodFrame.Visible = not rodFrame.Visible
    if rodFrame.Visible then refreshRodList() end
end)

-- =========================================================
-- Bait Shop
-- =========================================================
local baits = {
    ["TopWater Bait (100 Coins)"] = 10,
    ["Lucky Bait (1k Coins)"]     = 2,
    ["Midnight Bait (3k Coins)"]  = 3,
    ["Chroma Bait (290k Coins)"]  = 6,
    ["Dark Mater Bait (630k)"]    = 8,
    ["Corrupt Bait (1.15M)"]      = 15,
    ["Aether Bait (3.7M)"]        = 16,
}

local baitBtn = Instance.new("TextButton", MiscTab)
baitBtn.Size = UDim2.new(1, 0, 0, 30)
baitBtn.Text = "🪱 Select Bait"
baitBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
baitBtn.TextColor3 = Color3.fromRGB(255,255,255)
baitBtn.Font = Enum.Font.GothamBold
baitBtn.TextSize = 14
Instance.new("UICorner", baitBtn).CornerRadius = UDim.new(0,6)

local baitFrame = Instance.new("Frame", MiscTab)
baitFrame.Size = UDim2.new(1, -20, 0, 120)
baitFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
baitFrame.Visible = false
Instance.new("UICorner", baitFrame).CornerRadius = UDim.new(0,6)

local baitScroll = Instance.new("ScrollingFrame", baitFrame)
baitScroll.Size = UDim2.new(1, 0, 1, 0)
baitScroll.CanvasSize = UDim2.new(0,0,0,0)
baitScroll.ScrollBarThickness = 4
baitScroll.BackgroundTransparency = 1

local baitLayout = Instance.new("UIListLayout", baitScroll)
baitLayout.Padding = UDim.new(0,3)

local function refreshBaitList()
    for _, c in ipairs(baitScroll:GetChildren()) do
        if c:IsA("TextButton") then c:Destroy() end
    end
    local count = 0
    for name, id in pairs(baits) do
        count += 1
        local btn = Instance.new("TextButton", baitScroll)
        btn.Size = UDim2.new(1, -5, 0, 25)
        btn.Text = name
        btn.BackgroundColor3 = Color3.fromRGB(60,0,100)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 13
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)

        btn.MouseButton1Click:Connect(function()
            local RFPurchaseBait = net:WaitForChild("RF/PurchaseBait")
            pcall(function() RFPurchaseBait:InvokeServer(id) end)
        end)
    end
    baitScroll.CanvasSize = UDim2.new(0,0,0,count*28)
end

baitBtn.MouseButton1Click:Connect(function()
    baitFrame.Visible = not baitFrame.Visible
    if baitFrame.Visible then refreshBaitList() end
end)


-- =========================================================
-- Teleport to Player
-- =========================================================
local LocalPlayer = game.Players.LocalPlayer
local Players = game:GetService("Players")

local function teleportToPlayerExact(username)
    local target = Players:FindFirstChild(username)
    if target and target.Character and LocalPlayer.Character then
        local myHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
        if myHRP and targetHRP then
            myHRP.CFrame = targetHRP.CFrame + Vector3.new(2, 0, 0)
            print("✅ Teleported to " .. target.DisplayName)
        end
    end
end
local playerDropdownBtn = Instance.new("TextButton", MiscTab)
playerDropdownBtn.Size = UDim2.new(1, 0, 0, 30)
playerDropdownBtn.Text = "🌀 Teleport to Player"
playerDropdownBtn.BackgroundColor3 = Color3.fromRGB(40,0,80) 
playerDropdownBtn.TextColor3 = Color3.fromRGB(255,255,255)
playerDropdownBtn.Font = Enum.Font.GothamBold
playerDropdownBtn.TextSize = 14
Instance.new("UICorner", playerDropdownBtn).CornerRadius = UDim.new(0,6)

local popupFrame = Instance.new("Frame", MiscTab)
popupFrame.Size = UDim2.new(1, -20, 0, 120)
popupFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
popupFrame.Visible = false
Instance.new("UICorner", popupFrame).CornerRadius = UDim.new(0,6)

local scrolling = Instance.new("ScrollingFrame", popupFrame)
scrolling.Size = UDim2.new(1, 0, 1, 0)
scrolling.CanvasSize = UDim2.new(0,0,0,0)
scrolling.ScrollBarThickness = 4
scrolling.BackgroundTransparency = 1

local popupLayout = Instance.new("UIListLayout", scrolling)
popupLayout.Padding = UDim.new(0,3)

local function refreshPlayerList()
    for _, child in ipairs(scrolling:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    local count = 0
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            count += 1
            local btn = Instance.new("TextButton", scrolling)
            btn.Size = UDim2.new(1, -5, 0, 25)
            btn.Text = p.DisplayName
            btn.BackgroundColor3 = Color3.fromRGB(60,0,100) 
            btn.TextColor3 = Color3.fromRGB(255,255,255)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 13
            Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)

            btn.MouseButton1Click:Connect(function()
                teleportToPlayerExact(p.Name)
                popupFrame.Visible = false
            end)
        end
    end
    scrolling.CanvasSize = UDim2.new(0,0,0,count * 28)
end

playerDropdownBtn.MouseButton1Click:Connect(function()
    popupFrame.Visible = not popupFrame.Visible
    if popupFrame.Visible then refreshPlayerList() end
end)
Players.PlayerAdded:Connect(refreshPlayerList)
Players.PlayerRemoving:Connect(refreshPlayerList)


local bottomSpacer = Instance.new("Frame", MiscTab)
bottomSpacer.Size = UDim2.new(1, 0, 0, 40)
bottomSpacer.BackgroundTransparency = 1
bottomSpacer.LayoutOrder = 999

-- =========================================================
-- TRADE TAB CONTENT
-- =========================================================
local tradeFrame = contents["Trade"]
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local net = ReplicatedStorage:FindFirstChild("Packages")
    and ReplicatedStorage.Packages:FindFirstChild("_Index")
    and ReplicatedStorage.Packages._Index:FindFirstChild("sleitnick_net@0.2.0")
    and ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"]:FindFirstChild("net")

-- =========================================================
-- TARGET BOX 
-- =========================================================
local targetBox = Instance.new("TextBox", tradeFrame)
targetBox.Size = UDim2.new(1, -20, 0, 30)
targetBox.Position = UDim2.new(0, 10, 0, 10)
targetBox.PlaceholderText = "Enter target username"
targetBox.Text = ""
targetBox.BackgroundColor3 = Color3.fromRGB(60, 0, 100)
targetBox.TextColor3 = Color3.fromRGB(255,255,255)
targetBox.Font = Enum.Font.Gotham
targetBox.TextSize = 14
Instance.new("UICorner", targetBox).CornerRadius = UDim.new(0,6)

-- =========================================================
-- TELEPORT BUTTON
-- =========================================================
local teleportBtn = Instance.new("TextButton", tradeFrame)
teleportBtn.Size = UDim2.new(1, -20, 0, 30)
teleportBtn.Position = UDim2.new(0, 10, 0, 50)
teleportBtn.Text = "Teleport to Player"
teleportBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
teleportBtn.TextColor3 = Color3.fromRGB(255,255,255)
teleportBtn.Font = Enum.Font.GothamBold
teleportBtn.TextSize = 14
Instance.new("UICorner", teleportBtn).CornerRadius = UDim.new(0,6)

local function teleportToPlayer(username)
    local target = Players:FindFirstChild(username)
    if target and target.Character and LocalPlayer.Character then
        local myHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
        if myHRP and targetHRP then
            myHRP.CFrame = targetHRP.CFrame + Vector3.new(2,0,0)
            print("✅ Teleported to "..target.DisplayName)
        end
    end
end

teleportBtn.MouseButton1Click:Connect(function()
    local name = targetBox.Text
    if name ~= "" then
        teleportToPlayer(name)
    else
        warn("Please enter a target username!")
    end
end)

-- =========================================================
-- TRADE FUNCTIONALITY
-- =========================================================
local tradeActive = false
local selectedItems = {}
local isSending = false
local stopSending = false
local totalSelected, successCount, failCount = 0,0,0

local function getRemote(pathTable)
    local node = ReplicatedStorage
    for _, name in ipairs(pathTable) do
        local ok, found = pcall(function() return node:FindFirstChild(name) end)
        if not ok or not found then return nil end
        node = found
    end
    return node
end

local RF_CanSendTrade     = getRemote({"RF", "CanSendTrade"})
local RF_InitiateTrade    = getRemote({"RF", "InitiateTrade"})

if net then
    RF_CanSendTrade  = RF_CanSendTrade  or net:FindFirstChild("RF/CanSendTrade")
    RF_InitiateTrade = RF_InitiateTrade or net:FindFirstChild("RF/InitiateTrade")
end

local function trySendTrade(targetUserId, uuid)
    if not targetUserId or not uuid then
        return false, "missing_args"
    end

    if RF_CanSendTrade then
        local ok, canSend = pcall(function()
            return RF_CanSendTrade:InvokeServer(targetUserId)
        end)
        if not ok or not canSend then
            return false, "cannot_send"
        end
    end

    local okInit, res = pcall(function()
        return RF_InitiateTrade:InvokeServer(targetUserId, uuid)
    end)
    if not okInit or not res then
        return false, "initiate_failed"
    end

    return true, "sent"
end

local tradeBtn = Instance.new("TextButton", tradeFrame)
tradeBtn.Size = UDim2.new(1, -20, 0, 30)
tradeBtn.Position = UDim2.new(0,10,0,90)
tradeBtn.Text = "Enable Trade Mode"
tradeBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
tradeBtn.TextColor3 = Color3.fromRGB(255,255,255)
tradeBtn.Font = Enum.Font.GothamBold
tradeBtn.TextSize = 14
Instance.new("UICorner", tradeBtn).CornerRadius = UDim.new(0,6)

tradeBtn.MouseButton1Click:Connect(function()
    tradeActive = not tradeActive
    if tradeActive then
        tradeBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
        tradeBtn.Text = "Disable Trade Mode"
    else
        tradeBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
        tradeBtn.Text = "Enable Trade Mode"
    end
end)

local sendBtn = Instance.new("TextButton", tradeFrame)
sendBtn.Size = UDim2.new(1, -20, 0, 30)
sendBtn.Position = UDim2.new(0,10,0,130)
sendBtn.Text = "Send Selected Items"
sendBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
sendBtn.TextColor3 = Color3.fromRGB(255,255,255)
sendBtn.Font = Enum.Font.GothamBold
sendBtn.TextSize = 14
Instance.new("UICorner", sendBtn).CornerRadius = UDim.new(0,6)

local stopBtn = Instance.new("TextButton", tradeFrame)
stopBtn.Size = UDim2.new(1, -20, 0, 30)
stopBtn.Position = UDim2.new(0,10,0,170)
stopBtn.Text = "Stop Sending"
stopBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
stopBtn.TextColor3 = Color3.fromRGB(255,255,255)
stopBtn.Font = Enum.Font.GothamBold
stopBtn.TextSize = 14
Instance.new("UICorner", stopBtn).CornerRadius = UDim.new(0,6)

local statusLabel = Instance.new("TextLabel", tradeFrame)
statusLabel.Size = UDim2.new(1,-20,0,40)
statusLabel.Position = UDim2.new(0,10,0,210)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(255,255,200)
statusLabel.TextWrapped = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14
statusLabel.TextXAlignment = Enum.TextXAlignment.Center
statusLabel.TextYAlignment = Enum.TextYAlignment.Center
statusLabel.Text = "0/0"

local function updateStatus()
    statusLabel.Text = string.format("%d/%d", successCount, totalSelected)
end

local function getTargetUserId()
    local name = targetBox.Text
    local p = Players:FindFirstChild(name)
    return p and p.UserId or nil
end

sendBtn.MouseButton1Click:Connect(function()
    if isSending then return end
    if #selectedItems == 0 then
        warn("No items selected to send.")
        return
    end

    local targetUserId = getTargetUserId()
    if not targetUserId then
        warn("Target player not found!")
        return
    end

    sendBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
    sendBtn.Text = "Sending..."
    totalSelected = #selectedItems
    successCount, failCount = 0,0
    updateStatus()

    isSending = true
    stopSending = false
    stopBtn.Text = "Stop Sending"

    task.spawn(function()
        for _, uuid in ipairs(selectedItems) do
            if stopSending then break end

            local success, _ = trySendTrade(targetUserId, uuid)
            if success then successCount += 1 else failCount += 1 end
            updateStatus()

            local waitTime = 6
            local elapsed = 0
            while elapsed < waitTime do
                if stopSending then break end
                task.wait(0.1)
                elapsed += 0.1
            end
        end

        selectedItems = {}
        isSending = false
        stopBtn.Text = "Stop Sending"
        sendBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
        sendBtn.Text = "Send Selected Items"
    end)
end)

stopBtn.MouseButton1Click:Connect(function()
    if isSending then
        stopSending = true
        stopBtn.Text = "Stopping..."
    end
end)

-- =========================================================
-- HOOK EQUIP ITEM (Tambahan)
-- =========================================================
local ok_mt, mt = pcall(getrawmetatable, game)
if ok_mt and mt and mt.__namecall then
    local oldNamecall = mt.__namecall
    setreadonly(mt,false)
    mt.__namecall = newcclosure(function(self,...)
        local args = {...}
        local method = getnamecallmethod()
        if tradeActive and tostring(self) == "RE/EquipItem" and method == "FireServer" then
            local uuid = args[1]
            if uuid then
                table.insert(selectedItems, uuid)
                print("🟣 Item selected:", uuid)
            end
            return nil
        end
        return oldNamecall(self, unpack(args))
    end)
    setreadonly(mt,true)
else
    warn("getrawmetatable or __namecall not available.")
end


-- =========================================================
-- WEBHOOK TAB CONTENT + FUNCTION
-- =========================================================
local webhookFrame = contents["Webhook"]

local webhookLabel = Instance.new("TextLabel", webhookFrame)
webhookLabel.Size = UDim2.new(1, -20, 0, 20)
webhookLabel.Position = UDim2.new(0, 10, 0, 0)
webhookLabel.BackgroundTransparency = 1
webhookLabel.TextColor3 = Color3.fromRGB(200,200,255)
webhookLabel.Text = "Webhook URL:"
webhookLabel.Font = Enum.Font.GothamBold
webhookLabel.TextSize = 14
webhookLabel.TextXAlignment = Enum.TextXAlignment.Left

local webhookBox = Instance.new("TextBox", webhookFrame)
webhookBox.Size = UDim2.new(1, -20, 0, 30)
webhookBox.Position = UDim2.new(0, 10, 0, 25)
webhookBox.PlaceholderText = "Enter Discord webhook URL"
webhookBox.Text = ""
webhookBox.BackgroundColor3 = Color3.fromRGB(60, 0, 100)
webhookBox.TextColor3 = Color3.fromRGB(255,255,255)
webhookBox.Font = Enum.Font.Gotham
webhookBox.TextSize = 14
Instance.new("UICorner", webhookBox).CornerRadius = UDim.new(0,6)

local msgIdLabel = Instance.new("TextLabel", webhookFrame)
msgIdLabel.Size = UDim2.new(1, -20, 0, 20)
msgIdLabel.Position = UDim2.new(0, 10, 0, 65)
msgIdLabel.BackgroundTransparency = 1
msgIdLabel.TextColor3 = Color3.fromRGB(200,200,255)
msgIdLabel.Text = "Message ID:"
msgIdLabel.Font = Enum.Font.GothamBold
msgIdLabel.TextSize = 14
msgIdLabel.TextXAlignment = Enum.TextXAlignment.Left

local msgIdBox = Instance.new("TextBox", webhookFrame)
msgIdBox.Size = UDim2.new(1, -20, 0, 30)
msgIdBox.Position = UDim2.new(0, 10, 0, 90)
msgIdBox.PlaceholderText = "Enter message ID"
msgIdBox.Text = ""
msgIdBox.BackgroundColor3 = Color3.fromRGB(60, 0, 100)
msgIdBox.TextColor3 = Color3.fromRGB(255,255,255)
msgIdBox.Font = Enum.Font.Gotham
msgIdBox.TextSize = 14
Instance.new("UICorner", msgIdBox).CornerRadius = UDim.new(0,6)

local startWebhookBtn = Instance.new("TextButton", webhookFrame)
startWebhookBtn.Size = UDim2.new(1, -20, 0, 35)
startWebhookBtn.Position = UDim2.new(0, 10, 0, 135)
startWebhookBtn.Text = "Start Webhook Summary"
startWebhookBtn.BackgroundColor3 = Color3.fromRGB(40,0,80)
startWebhookBtn.TextColor3 = Color3.fromRGB(255,255,255)
startWebhookBtn.Font = Enum.Font.GothamBold
startWebhookBtn.TextSize = 14
Instance.new("UICorner", startWebhookBtn).CornerRadius = UDim.new(0,6)

-- =========================================================
-- FUNCTION: Start Webhook Logic
-- =========================================================
local function StartWebhookSummary(webhookUrl, messageId)
    local TextChatService = game:GetService("TextChatService")
    local HttpService = game:GetService("HttpService")
    local UserInputService = game:GetService("UserInputService")
    local Players = game:GetService("Players")

    local WEBHOOK_GENERAL = webhookUrl
    local lastMessageId = messageId

    local normalCount, mutationCount, lastCaught = {}, {}, {}
    local UPDATE_INTERVAL = 15 

    local fullFishNames = {
        "Manta Ray","Hammerhead Shark","Ghost Shark","Blob Shark","Thresher Shark",
        "Hermit Crab","Orca","Dotted Stingray","Worm Fish","Robot Kraken",
        "Frostborn Shark","Plasma Shark","Giant Squid","Queen Crab","King Crab",
        "Thin Armor Shark","Scare","Abyss Seahorse","Megalodon","Great Whale",
        "Crystal Crab","Gingerbread Shark"
    }

    local mutations = {
        "GOLD","GEMSTONE","FAIRY DUST","LIGHTNING","HOLOGRAPHIC",
        "STONE","ALBNO","CORRUPT","COLOR BURN","GHOST","MIDNIGHT","RADIOACTIVE"
    }

    local function StripTags(str)
        return str:gsub("<[^>]->", "")
    end

    local function CleanMessage(prefix, text)
        prefix = prefix:gsub("^%s+", ""):gsub("%s+$", "")
        text = text:gsub("^%s+", ""):gsub("%s+$", "")
        if prefix ~= "" then
            return prefix .. " " .. text
        else
            return text
        end
    end

    local function SendSummary()
        local desc = "**Normal Fish:**\n"
        local totalNormal = 0
        for fish, count in pairs(normalCount) do
            desc = desc .. string.format("• %s x%d\n", fish, count)
            totalNormal += count
        end
        if next(normalCount) == nil then
            desc ..= "Belum ada ikan normal.\n"
        else
            desc ..= string.format("\nTotal Normal Fish: %d\n", totalNormal)
        end

        desc ..= "\n――――――――――――――――――――――――――――――――\n\n"
        desc ..= "**Mutasi Fish:**\n"

        local totalMutation = 0
        for fish, count in pairs(mutationCount) do
            desc = desc .. string.format("• %s x%d\n", fish, count)
            totalMutation += count
        end
        if next(mutationCount) == nil then
            desc ..= "Belum ada ikan mutasi.\n"
        else
            desc ..= string.format("\nTotal Mutasi Fish: %d\n", totalMutation)
        end

        desc ..= "\n――――――――――――――――――――――――――――――――\n\n"
        desc ..= "**🎣 10 Tangkapan Terakhir:**\n"
        for i = #lastCaught, 1, -1 do
            local data = lastCaught[i]
            desc ..= string.format("• %s → %s (%s)\n", data.player, data.fish, data.mutation)
        end
        if #lastCaught == 0 then
            desc ..= "Belum ada tangkapan terakhir."
        end

        local timeStr = os.date("%H:%M:%S")
        local embed = {
            title = "Tole Fish - Total",
            description = desc,
            color = 11928316,
            timestamp = DateTime.now():ToIsoDate(),
            footer = { text = "🕒 Last update: " .. timeStr }
        }

        local headers = { ["Content-Type"] = "application/json" }
        local body = HttpService:JSONEncode({ embeds = { embed } })
        local url = WEBHOOK_GENERAL .. "/messages/" .. lastMessageId

        pcall(function()
            request({
                Url = url,
                Method = "PATCH",
                Headers = headers,
                Body = body
            })
        end)
    end

    task.spawn(function()
        while task.wait(UPDATE_INTERVAL) do
            SendSummary()
        end
    end)

    TextChatService.MessageReceived:Connect(function(msg)
        local channel = msg.TextChannel and msg.TextChannel.Name or "Unknown"
        if channel ~= "RBXGeneral" then return end

        local prefix = StripTags(msg.PrefixText or "")
        local text = StripTags(msg.Text or "")
        local cleaned = CleanMessage(prefix, text)

        local playerName = string.match(cleaned, "%]:%s*([%w_]+)%sobtained") or "Unknown"
        local foundFish, foundMutation

        for _, fish in ipairs(fullFishNames) do
            if string.find(cleaned, fish) then
                foundFish = fish
                break
            end
        end
        for _, mut in ipairs(mutations) do
            if string.find(cleaned, mut) then
                foundMutation = mut
                break
            end
        end

        if foundFish then
            if foundMutation then
                local key = foundMutation .. " " .. foundFish
                mutationCount[key] = (mutationCount[key] or 0) + 1
            else
                normalCount[foundFish] = (normalCount[foundFish] or 0) + 1
            end

            table.insert(lastCaught, {
                player = playerName,
                fish = foundFish,
                mutation = foundMutation or "Normal"
            })
            if #lastCaught > 10 then
                table.remove(lastCaught, 1)
            end
        end
    end)
end

-- =========================================================
-- BUTTON CLICK → START FUNCTION
-- =========================================================
startWebhookBtn.MouseButton1Click:Connect(function()
    local url = webhookBox.Text
    local msgid = msgIdBox.Text

    if url == "" or msgid == "" then
        warn("⚠️ Please fill Webhook URL and Message ID first!")
        return
    end

    print("✅ Webhook started with URL:", url)
    StartWebhookSummary(url, msgid)
end)



local VirtualUser = game:GetService("VirtualUser")

game:GetService("Players").LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
